"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[180],{7084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=t(4848),r=t(8453);const s={},a="Introduction",i={id:"Devlens-CLI/Introduction",title:"Introduction",description:"The search engine that help you find code pattern.",source:"@site/docs/Devlens-CLI/1 - Introduction.md",sourceDirName:"Devlens-CLI",slug:"/Devlens-CLI/Introduction",permalink:"/devlens-docs/Devlens-CLI/Introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Usage",permalink:"/devlens-docs/Devlens-CLI/Usage"}},d={},c=[{value:"3 easy steps",id:"3-easy-steps",level:2},{value:"Binaries",id:"binaries",level:2}];function l(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,o.jsx)(n.p,{children:"The search engine that help you find code pattern."}),"\n",(0,o.jsx)(n.p,{children:"Devlens is a tool that scan your code to retreive pattern, and store their value and location in a SQLite Database.\nTo find what you want in your code you simply have to create a Annotator based on the AST."}),"\n",(0,o.jsx)(n.p,{children:"Imagine you are doing a full upgrade of your application and need to be sure you swapped every Old version of a function;\nDevlens can analyze your whole project and tell you exactly in which file and which lines are your old code."}),"\n",(0,o.jsx)(n.p,{children:"Maybe you want to be sure you are using only one DB environnement in your project: You can query every DB env import with devlens, it will give you a clear output of every DB env of your project."}),"\n",(0,o.jsx)(n.h2,{id:"3-easy-steps",children:"3 easy steps"}),"\n",(0,o.jsx)(n.p,{children:"Devlens only needs 4 steps to show you what you want to know about your code."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"- Step 1:"})," Analyze your project with a single command , and output the analyze on terminal or a file."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"- Step 2:"})," Look at the AST tree, and find the nodes corresponding to the values you want to retreive, and create an Annotator in the annotation folder with nodes you previously found."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"- Step 3:"})," Launch again the analyze."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"- Step 4:"})," Query the result from the database."]}),"\n",(0,o.jsx)(n.h2,{id:"binaries",children:"Binaries"}),"\n",(0,o.jsx)(n.p,{children:"Binaries are under the last release on GitHub (min-requirement Python 3.11)."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);